---

- name: Pre-Install | Set default facts
  set_fact:
    use_firewalld: false
    configure_consul: false
    configure_telegraf: false
    set_telegraf_credentials: false

- name: Pre-Install | Check running services
  service_facts:

- name: Pre-Install | Check Consul
  when: aeb_config_consul | lower == 'true'
  block:
  - name: Pre-Install | Check Consul configuration
    when:
    - not (ansible_facts.services | map('quote') | join(',') | regex_search('consul'))
    fail: msg="Consul service not found - Cannot configure it"

  - name: Pre-Install | Get Consul facts
    set_fact:
      configure_consul: true

- name: Pre-Install | Check Telegraf
  when: aeb_config_telegraf | lower == 'true'
  block:
  - name: Pre-Install | Check Telegraf configuration
    fail: msg="Telegraf service not found - Cannot configure it"
    when:
    - not (ansible_facts.services | map('quote') | join(',') | regex_search('telegraf'))

  - name: Pre-Install | Get Telegraf facts
    set_fact:
      configure_telegraf: true

  - name: Pre-Install | Check Telegraf credentials
    when:
    - aeb_telegraf_username == None xor aeb_telegraf_password == None
    fail: msg="Telegraf credentials must be both given"

  - name: Pre-Install | Set Telegraf credentials fact
    when:
    - aeb_telegraf_username != None
    - aeb_telegraf_password != None
    set_fact:
      set_telegraf_credentials: true


- name: Pre-Install | Check storage paths
  loop: "{{ aeb_storage_paths }}"
  changed_when: False
  command: test -d {{ item }}
# TODO: check mountpoints using facts
#  command: df | grep -w {{ item }}

- name: Pre-Install | Check CPU number
  assert:
    that: ansible_processor_vcpus >= aeb_cpuset_number_per_jvm | int * aeb_storage_paths | length
    fail_msg: Not enough threads on the server

- name: Pre-Install | Check RAM
  assert:
    that: ansible_memtotal_mb * 1024 / (aeb_jvm_xmx_gb | int * aeb_storage_paths | length) >= 2
    fail_msg: Elasticsearch should not use more than 50% of total RAM

- name: Pre-Install | Check XMX
  assert:
    that: aeb_jvm_xmx_gb | int > 0
    fail_msg: The JVM XMX attribute must be at least 1GB

- name: Pre-Install | Check ports overlap
  loop: "{{ range(0, aeb_storage_paths | length, 1) | list }}"
  assert:
    that: aeb_rpc_starting_port | int + item != aeb_http_starting_port | int + item
    fail_msg: RPC and HTTP ports have to be different

- name: Pre-Install | Check cluster name
  assert:
    that: aeb_cluster_name | length > 0
    fail_msg: The cluster has te be named

- name: Pre-Install | Check publish host
  when: aeb_publish_host != None
  assert:
    that: aeb_publish_host in ansible_all_ipv4_addresses or aeb_publish_host in ansible_all_ipv6_addresses
    fail_msg: The publish host must be a mounted address on the host

- name: Pre-Install | Set default aeb_publish_host fact
  when: aeb_publish_host == None
  set_fact:
    aeb_publish_host: "{{ ansible_default_ipv4.address }}"

- name: Pre-Install | Check Elasticsearch masters health
  loop: "{{ aeb_initial_masters }}"
  register: els_health
  until:
  - els_health.json['cluster_name'] == aeb_cluster_name
  - els_health.json['status'] == "green"
  retries: 10
  delay: 5
  uri:
    url: "{{ item }}/_cluster/health?pretty"
    method: GET
    validate_certs: yes
    status_code:
    - 200
    headers:
      X-Requested-By: ansible
